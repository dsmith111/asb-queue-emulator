// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// DestructiveReadOKCode is the HTTP code returned for type DestructiveReadOK
const DestructiveReadOKCode int = 200

/*DestructiveReadOK Message successfully retrieved and deleted

swagger:response destructiveReadOK
*/
type DestructiveReadOK struct {
	/*

	 */
	BrokerProperties string `json:"BrokerProperties"`
	/*

	 */
	Location string `json:"Location"`

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewDestructiveReadOK creates DestructiveReadOK with default headers values
func NewDestructiveReadOK() *DestructiveReadOK {

	return &DestructiveReadOK{}
}

// WithBrokerProperties adds the brokerProperties to the destructive read o k response
func (o *DestructiveReadOK) WithBrokerProperties(brokerProperties string) *DestructiveReadOK {
	o.BrokerProperties = brokerProperties
	return o
}

// SetBrokerProperties sets the brokerProperties to the destructive read o k response
func (o *DestructiveReadOK) SetBrokerProperties(brokerProperties string) {
	o.BrokerProperties = brokerProperties
}

// WithLocation adds the location to the destructive read o k response
func (o *DestructiveReadOK) WithLocation(location string) *DestructiveReadOK {
	o.Location = location
	return o
}

// SetLocation sets the location to the destructive read o k response
func (o *DestructiveReadOK) SetLocation(location string) {
	o.Location = location
}

// WithPayload adds the payload to the destructive read o k response
func (o *DestructiveReadOK) WithPayload(payload string) *DestructiveReadOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the destructive read o k response
func (o *DestructiveReadOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DestructiveReadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header BrokerProperties

	brokerProperties := o.BrokerProperties
	if brokerProperties != "" {
		rw.Header().Set("BrokerProperties", brokerProperties)
	}

	// response header Location

	location := o.Location
	if location != "" {
		rw.Header().Set("Location", location)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DestructiveReadNoContentCode is the HTTP code returned for type DestructiveReadNoContent
const DestructiveReadNoContentCode int = 204

/*DestructiveReadNoContent No messages available within the specified timeout period..

swagger:response destructiveReadNoContent
*/
type DestructiveReadNoContent struct {
}

// NewDestructiveReadNoContent creates DestructiveReadNoContent with default headers values
func NewDestructiveReadNoContent() *DestructiveReadNoContent {

	return &DestructiveReadNoContent{}
}

// WriteResponse to the client
func (o *DestructiveReadNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DestructiveReadBadRequestCode is the HTTP code returned for type DestructiveReadBadRequest
const DestructiveReadBadRequestCode int = 400

/*DestructiveReadBadRequest Bad request.

swagger:response destructiveReadBadRequest
*/
type DestructiveReadBadRequest struct {
}

// NewDestructiveReadBadRequest creates DestructiveReadBadRequest with default headers values
func NewDestructiveReadBadRequest() *DestructiveReadBadRequest {

	return &DestructiveReadBadRequest{}
}

// WriteResponse to the client
func (o *DestructiveReadBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// DestructiveReadUnauthorizedCode is the HTTP code returned for type DestructiveReadUnauthorized
const DestructiveReadUnauthorizedCode int = 401

/*DestructiveReadUnauthorized Authorization failure.

swagger:response destructiveReadUnauthorized
*/
type DestructiveReadUnauthorized struct {
}

// NewDestructiveReadUnauthorized creates DestructiveReadUnauthorized with default headers values
func NewDestructiveReadUnauthorized() *DestructiveReadUnauthorized {

	return &DestructiveReadUnauthorized{}
}

// WriteResponse to the client
func (o *DestructiveReadUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// DestructiveReadGoneCode is the HTTP code returned for type DestructiveReadGone
const DestructiveReadGoneCode int = 410

/*DestructiveReadGone Specified queue or subscription does not exist..

swagger:response destructiveReadGone
*/
type DestructiveReadGone struct {
}

// NewDestructiveReadGone creates DestructiveReadGone with default headers values
func NewDestructiveReadGone() *DestructiveReadGone {

	return &DestructiveReadGone{}
}

// WriteResponse to the client
func (o *DestructiveReadGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(410)
}

// DestructiveReadInternalServerErrorCode is the HTTP code returned for type DestructiveReadInternalServerError
const DestructiveReadInternalServerErrorCode int = 500

/*DestructiveReadInternalServerError Internal error.

swagger:response destructiveReadInternalServerError
*/
type DestructiveReadInternalServerError struct {
}

// NewDestructiveReadInternalServerError creates DestructiveReadInternalServerError with default headers values
func NewDestructiveReadInternalServerError() *DestructiveReadInternalServerError {

	return &DestructiveReadInternalServerError{}
}

// WriteResponse to the client
func (o *DestructiveReadInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
